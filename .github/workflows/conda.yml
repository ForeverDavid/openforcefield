name: Conda

on:
  pull_request:
  schedule:
    # Nightly tests run on master by default:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    - cron: "0 0 * * *"

jobs:
  test:
    name: Test on ${{ matrix.cfg.os }}, Python ${{ matrix.python-version }}, OpenEye=${{ matrix.openeye }}
    runs-on: ${{ matrix.cfg.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - 3.6
          - 3.7
          # Uncomment when ready ;)
          # - 3.8
        openeye:
          - "true"
          - "false"
        cfg:
          - os: ubuntu-latest
          - os: macOS-latest

    env:
      CI_OS: ${{ matrix.cfg.os }}
      OPENEYE: ${{ matrix.cfg.openeye }}
      PYVER: ${{ matrix.python-version }}
      OE_LICENSE: ${{ github.workspace }}/oe_license.txt
      PACKAGE: openforcefield

    steps:
      - uses: actions/checkout@v2

      - uses: goanpeca/setup-miniconda@v1
        name: Vanilla install from conda
        if: ${{ matrix.openeye == 'false' }}
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: test
          environment-file: devtools/conda-envs/conda.yaml
          auto-activate-base: false
      - uses: goanpeca/setup-miniconda@v1
        name: Install from conda with OpenEye
        if: ${{ matrix.openeye == 'true' }}
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: test
          environment-file: devtools/conda-envs/conda_oe.yaml
          auto-activate-base: false


      - name: Additional info about the build
        shell: bash -l {0}
        run: |
          uname -a
          df -h
          ulimit -a

      - name: Decrypt OpenEye license
        shell: bash -l {0}
        env:
          ENC_OE_LICENSE: ${{ secrets.OE_LICENSE__EXP_JUN2020 }}
        run: |
          echo "${ENC_OE_LICENSE}" > ${OE_LICENSE}

      - name: Environment Information
        shell: bash -l {0}
        run: |
          conda info
          conda list

      - name: Check that correct OFFTK version was installed
        shell: bash -l {0}
        run: |
          # Make sure the currently installed version is the same as the newest git tag
          echo "Latest tag:" `git ls-remote --tags https://github.com/openforcefield/openforcefield.git | tail -1 | cut -f2 | sed 's/refs\/tags\///'`
          python -c "import openforcefield, sys; print('Installed OpenFF Version', openforcefield.__version__);assert openforcefield.__version__ == sys.argv[1]" \
                       `git ls-remote --tags https://github.com/openforcefield/openforcefield.git | tail -1 | cut -f2 | sed 's/refs\/tags\/// ' `
      - name: Test the package
        shell: bash
        run: |
          PYTEST_ARGS="-v --ignore=utilities --ignore=examples/deprecated --nbval-lax"
          if [[ "$OPENEYE" == true ]]; then
            PYTEST_ARGS+=" --ignore=docs --ignore=devtools --doctest-modules"
          fi
          pytest $PYTEST_ARGS

