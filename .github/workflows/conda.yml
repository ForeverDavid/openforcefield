name: Conda

on:
  pull_request:
  schedule:
    # Nightly tests run on master by default:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    - cron: "0 0 * * *"

jobs:
  package:
    name: Package installation tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
        python-version:
          - 3.6
          - 3.7
          # Uncomment when ready ;)
          # - 3.8
        openeye:
          - true
          - false

    env:
      OPENEYE: ${{ matrix.cfg.openeye }}
      OE_LICENSE: ${{ github.workspace }}/oe_license.txt

    steps:
    - uses: actions/checkout@v2
      with:
        ref: master
    - name: Decrypt OpenEye license
      shell: bash
      env:
        ENC_OE_LICENSE: ${{ secrets.OE_LICENSE__EXP_JUN2020 }}
      run: |
        echo "${ENC_OE_LICENSE}" > ${OE_LICENSE}
    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a
    - name: Fix conda permissions in MacOS
      shell: bash
      if: startsWith(matrix.os, 'macOS')
      run: |
        sudo chown -R $(id -u):$(id -g) ${CONDA}
    - name: Configure conda
      shell: bash
      run: |
        conda activate
        conda config --set always_yes yes
        conda update --quiet --all
        conda info --all
        conda list
    - name: Follow installation instructions
      shell: bash
      run: |
        conda activate
        conda config --add channels omnia --add channels conda-forge
        conda create -n openforcefield openforcefield python=${{ matrix.python-version }}
        conda activate openforcefield
        if [[ "$OPENEYE" == true ]]; then
          conda install openeye-toolkits
          python -c "from openeye import oechem; assert oechem.OEChemIsLicensed()"
        fi
        conda list
        # Make sure the currently installed version is the same as the newest git tag
        python -c 'import openforcefield, sys; assert openforcefield.__version__ == sys.argv[1]' \
        `git ls-remote --tags https://github.com/openforcefield/openforcefield.git | tail -1 | cut -f2 | sed 's/refs\/tags\///'`
    - name: Test the package
      shell: bash
      run: |
        PYTEST_ARGS="-v --ignore=utilities --ignore=examples/deprecated --nbval-lax"
        if [[ "$OPENEYE" == true ]]; then
          PYTEST_ARGS+=" --ignore=docs --ignore=devtools --doctest-modules"
        fi
        pytest $PYTEST_ARGS

