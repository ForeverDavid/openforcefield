# CommentBot (by @jaimergp)
# -------------------------
# GHA bot that acts on PR comments that contain "!commentbot, please <command>"
# Changes to the repository WILL be committed back! You need to set a personal access token
# in the repo with key "COMMENTBOT_TOKEN"
# Implemented commands (you can ask for several actions in the same comment)
# * run black: it runs black on your code
#
# References:
# - https://github.community/t5/GitHub-Actions/Trigger-action-via-pull-request-message/td-p/46523
# - https://www.innoq.com/en/blog/github-actions-automation/

name: comment
on:
  issue_comment:
    types: [created, edited]

jobs:
  bot:
    if: ${{ false }}
    # remove line above and uncomment below to enable bot
    # if: contains(github.event.comment.html_url, '/pull/') && contains(github.event.comment.body, '!commentbot, please')
    name: bot
    runs-on: ubuntu-latest
    env:
      PACKAGE: openforcefield

    steps:
      - name: Get branch name
        id: upstreambranch
        run: |
          echo "Debug JSON context..."
          echo "${{ toJson(github) }}"
          echo "Triggering PR..."
          echo ">>> ${{ github.event.issue.pull_request.url }}"
          echo "Query API to get branch name..."
          branchname="$(curl -v -H "Accept: application/vnd.github.sailor-v-preview+json" -u ${{ secrets.COMMENTBOT_TOKEN }} ${{ github.event.issue.pull_request.url }} | jq '.head.ref' | sed 's/\"//g')"
          echo ">>> ${branchname}"
          echo "Exporting branch name..."
          echo "::set-output name=branchname::${branchname}"

      - name: Checkout upstream repo
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.upstreambranch.outputs.branchname }}

      - name: Additional info about the build
        shell: bash
        run: |
          uname -a
          df -h
          ulimit -a

      # COMMANDS START HERE
      # Make sure to change the if: clause to a different message (modify only after "please")
      - name: Run black
        if: contains(github.event.comment.body, '!commentbot, please run black')
        shell: bash
        run: |
          . devtools/gh-actions/initialize_conda.sh
          conda activate
          conda create -n black -c conda-forge black
          conda activate black
          cd ${GITHUB_WORKSPACE}
          black ${PACKAGE}/

      # END OF COMMANDS

      - name: Commit changes
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        run: |
          if [[ ! -z "$(git status -uno --porcelain)" ]];
            git config user.name ${GITHUB_ACTOR}
            git config user.email "${GITHUB_ACTOR}@bots.github.com"
            cd ${GITHUB_WORKSPACE}
            git add $PACKAGE/
            git commit -m "Apply changes as requested in ${{ github.event.comment.html_url }}"
            repo_uri="https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
            git remote set-url origin "$repo_uri"
            git push origin
          fi

      - name: Report failure
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${GITHUB_REPOSITORY}/statuses/${{ sha }} \
          --header 'authorization: token ${{ secrets.COMMENTBOT_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{"state": "failure", "target_url": "https://example.com/build/status", "description": "Bot action failed!", "context": "ci/tests"}'
        if: failure()
