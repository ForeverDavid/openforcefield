name: CI

on:
  push:
    branches:
      - "master"
      - "maintenance/.+"
  pull_request:
    branches:
      - "master"
      - "maintenance/.+"
  schedule:
    # Nightly tests run on master by default:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    - cron: "0 0 * * *"

jobs:
  test:
    if: (github.event_name == 'schedule' && github.repository == 'openforcefield/openforcefield') || (github.event_name != 'schedule')
    name: Test on ${{ matrix.cfg.os }}, Python ${{ matrix.python-version }}, RDKit=${{ matrix.cfg.rdkit }}, OpenEye=${{ matrix.cfg.openeye }}
    runs-on: ${{ matrix.cfg.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - 3.6
          - 3.7
          # Uncomment when ready ;)
          # - 3.8
        cfg:
          - os: ubuntu-latest
            rdkit: "true"
            openeye: "false"

          - os: ubuntu-latest
            rdkit: "false"
            openeye: "true"

          - os: ubuntu-latest
            rdkit: "true"
            openeye: "true"

          - os: macOS-latest
            rdkit: "true"
            openeye: "false"

    env:
      CI_OS: ${{ matrix.cfg.os }}
      RDKIT: ${{ matrix.cfg.rdkit }}
      OPENEYE: ${{ matrix.cfg.openeye }}
      PYVER: ${{ matrix.python-version }}
      OE_LICENSE: ${{ github.workspace }}/oe_license.txt
      PACKAGE: openforcefield

    steps:
      - uses: actions/checkout@v2

      - uses: goanpeca/setup-miniconda@v1
        name: Install with both RDKit and OpenEye toolkits
        if: ${{ matrix.cfg.rdkit == 'TRUE' && matrix.cfg.openeye == 'TRUE' }}
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: test
          environment-file: devtools/conda-envs/test_env.yaml
          auto-activate-base: false
      - uses: goanpeca/setup-miniconda@v1
        name: Install only RDKit
        if: ${{ matrix.cfg.rdkit == 'TRUE' && matrix.cfg.openeye == 'FALSE' }}
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: test
          environment-file: devtools/conda-envs/rdkit.yaml
          auto-activate-base: false
      - uses: goanpeca/setup-miniconda@v1
        name: Install with OpenEye toolkits
        if: ${{ matrix.cfg.rdkit == 'FALSE' && matrix.cfg.openeye == 'TRUE' }}
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: test
          environment-file: devtools/conda-envs/openeye.yaml
          auto-activate-base: false

      - name: Additional info about the build
        shell: bash -l {0}
        run: |
          uname -a
          df -h
          ulimit -a

      - name: Decrypt OpenEye license
        shell: bash -l {0}
        env:
          ENC_OE_LICENSE: ${{ secrets.OE_LICENSE__EXP_JUN2020 }}
        run: |
          echo "${ENC_OE_LICENSE}" > ${OE_LICENSE}

      - name: Environment Information
        shell: bash -l {0}
        run: |
          conda info
          conda list

      - name: Install package
        shell: bash -l {0}
        run: |
          python -m pip install --no-deps -v .

      - name: Run unit tests
        shell: bash -l {0}
        run: |
          PYTEST_ARGS=" -r fE --tb=short --cov=$PACKAGE --cov-config=setup.cfg"
          PYTEST_ARGS+=" --ignore=openforcefield/tests/test_examples.py"
          if [[ "$RDKIT" == true && "$OPENEYE" == true ]]; then
            PYTEST_ARGS+="--doctest-modules"
          fi
          pytest $PYTEST_ARGS $PACKAGE/

      - name: Run examples
        shell: bash -l {0}
        run: |
          PYTEST_ARGS=" -r fE --tb=short --nbval-lax --ignore=examples/deprecated"
          if [[ "$RDKIT" == false && "$OPENEYE" == true ]]; then
            PYTEST_ARGS+=" --ignore=examples/check_dataset_parameter_coverage"
            PYTEST_ARGS+=" --ignore=examples/QCArchive_interface"
          fi
          pytest $PYTEST_ARGS examples/ openforcefield/tests/test_examples.py

      - name: Codecov
        uses: codecov/codecov-action@v1
