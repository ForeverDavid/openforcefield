language: python

# Run jobs on container-based infrastructure, can be overridden per job
dist: xenial

matrix:
  include:
    # Test osx with RDKit
    - os: osx
      language: generic
      env: PYTHON_VER=3.6 RDKIT=true
    - os: osx
      language: generic
      env: PYTHON_VER=3.7 RDKIT=true

    # Test RDKit compatibility
    - os: linux
      python: 3.6
      env: PYTHON_VER=3.6 RDKIT=true
    - os: linux
      python: 3.7
      sudo: required
      env: PYTHON_VER=3.7 RDKIT=true

    # Test OpenEye compatibility
    - os: linux
      python: 3.6
      env: PYTHON_VER=3.6 OPENEYE=true
    - os: linux
      sudo: required
      python: 3.7
      env: PYTHON_VER=3.7 OPENEYE=true

    # Test case where both OpenEye and RDKit are installed
    - os: linux
      python: 3.6
      env: PYTHON_VER=3.6 OPENEYE=true RDKIT=true
    - os: linux
      sudo: required
      python: 3.7
      env: PYTHON_VER=3.7 OPENEYE=true RDKIT=true

env:
  global:
    - OE_LICENSE="$HOME/oe_license.txt"

before_install:
    # Additional info about the build
  - uname -a
  - df -h
  - ulimit -a

    # Install the Python environemt
  - source devtools/travis-ci/before_install.sh
  - python -V
  # Unpack encrypted OpenEye license file
  #- if [[ "$OPENEYE" == true && "$TRAVIS_SECURE_ENV_VARS" == true ]]; then openssl aes-256-cbc -K $encrypted_5f58236b8908_key -iv $encrypted_5f58236b8908_iv -in oe_license.txt.enc -out $OE_LICENSE -d; fi
  - if [ "$TRAVIS_SECURE_ENV_VARS" == true ]; then openssl aes-256-cbc -K $encrypted_a4fdffb2b55a_key -iv $encrypted_a4fdffb2b55a_iv -in oe_license.txt.enc -out $OE_LICENSE -d; fi
  - if [[ "$OPENEYE" == true && "$TRAVIS_SECURE_ENV_VARS" == false ]]; then echo "OpenEye license will not be installed in forks."; fi

install:
  # Create test environment for package
  - conda create -n test python=$PYTHON_VER pip pytest pytest-cov
  - source activate test

  # Use beta version for partial bond orders
  - if [[ "$OPENEYE" == true ]]; then conda install --yes -c openeye/label/Orion openeye-toolkits oeommtools && python -c "import openeye; print(openeye.__version__)"; fi

  # Install RDKit
  - if [[ "$RDKIT" == true ]]; then conda install --yes -c rdkit rdkit; fi

  # Install pip only modules
  - pip install codecov
  - pip install coverage==4.4

  # Build and install package
  - conda build --python=$PYTHON_VER devtools/conda-recipe
  - conda install --use-local openforcefield

script:
  - pytest -v -s --cov=openforcefield openforcefield/tests/

notifications:
    email: false

after_success:
  - codecov
